/*
 * PainelMarcacoes.java
 *
 * This file is part of jAutoInvoice, http://sourceforge.net/p/jautoinvoice
 *
 * Copyright (C) 2010  Sérgio Lopes
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package net.sf.jautoinvoice.paineis;

import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import net.sf.jautoinvoice.JAutoInvoiceApp;
import net.sf.jautoinvoice.engine.Cliente;
import net.sf.jautoinvoice.engine.Marcacao;
import net.sf.jautoinvoice.engine.Veiculo;

public class PainelMarcacoes extends javax.swing.JPanel {

    private JAutoInvoiceApp app;
    //
    private DefaultListModel modeloMarcacoesExistentes;
    private DefaultComboBoxModel modeloVeiculos;
    private DefaultComboBoxModel modeloClientes;

    public PainelMarcacoes(JAutoInvoiceApp app) {
        this.app = app;

        modeloClientes = new DefaultComboBoxModel();
        for (Cliente c : app.getGestor().listarTodosClientes()) {
            modeloClientes.addElement(c);
        }

        modeloVeiculos = new DefaultComboBoxModel();
        for (Veiculo v : ((Cliente) modeloClientes.getElementAt(0)).getVeiculosActuais()) {
            modeloVeiculos.addElement(v);
        }

        modeloMarcacoesExistentes = new DefaultListModel();
        for (Marcacao m : app.getGestor().listarTodasMarcacoes()) {
            modeloMarcacoesExistentes.addElement(m);
        }

        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jpMarcacoes = new javax.swing.JPanel();
        jcCalendario = new com.toedter.calendar.JCalendar();
        jpDadosMarcacao = new javax.swing.JPanel();
        jlblCliente = new javax.swing.JLabel();
        jcbxClientes = new javax.swing.JComboBox();
        jlblVeiculo = new javax.swing.JLabel();
        jbcxVeiculos = new javax.swing.JComboBox();
        jtfHora = new javax.swing.JTextField();
        jlblHora = new javax.swing.JLabel();
        jscpNotas = new javax.swing.JScrollPane();
        jtaNotas = new javax.swing.JTextArea();
        jpMarcacoesExistentes = new javax.swing.JPanel();
        jscpMarcacoesExistentes = new javax.swing.JScrollPane();
        jlstMarcacoesExistentes = new javax.swing.JList();
        jbtnGravar = new javax.swing.JButton();

        jpMarcacoes.setBorder(javax.swing.BorderFactory.createTitledBorder("Marcações"));

        jcCalendario.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jcCalendarioPropertyChange(evt);
            }
        });

        jpDadosMarcacao.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jlblCliente.setText("Cliente");

        jcbxClientes.setModel(modeloClientes);
        jcbxClientes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbxClientesActionPerformed(evt);
            }
        });

        jlblVeiculo.setText("Veículo");

        jbcxVeiculos.setModel(modeloVeiculos);

        jlblHora.setText("Hora");

        jtaNotas.setColumns(20);
        jtaNotas.setRows(5);
        jscpNotas.setViewportView(jtaNotas);

        javax.swing.GroupLayout jpDadosMarcacaoLayout = new javax.swing.GroupLayout(jpDadosMarcacao);
        jpDadosMarcacao.setLayout(jpDadosMarcacaoLayout);
        jpDadosMarcacaoLayout.setHorizontalGroup(
            jpDadosMarcacaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpDadosMarcacaoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpDadosMarcacaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jscpNotas, javax.swing.GroupLayout.DEFAULT_SIZE, 354, Short.MAX_VALUE)
                    .addGroup(jpDadosMarcacaoLayout.createSequentialGroup()
                        .addGroup(jpDadosMarcacaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jlblCliente)
                            .addComponent(jlblVeiculo)
                            .addComponent(jlblHora))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jpDadosMarcacaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jbcxVeiculos, 0, 292, Short.MAX_VALUE)
                            .addComponent(jcbxClientes, 0, 292, Short.MAX_VALUE)
                            .addComponent(jtfHora, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        jpDadosMarcacaoLayout.setVerticalGroup(
            jpDadosMarcacaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpDadosMarcacaoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpDadosMarcacaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlblCliente)
                    .addComponent(jcbxClientes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpDadosMarcacaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbcxVeiculos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlblVeiculo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpDadosMarcacaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfHora, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlblHora))
                .addGap(18, 18, 18)
                .addComponent(jscpNotas, javax.swing.GroupLayout.DEFAULT_SIZE, 125, Short.MAX_VALUE)
                .addContainerGap())
        );

        jpMarcacoesExistentes.setBorder(javax.swing.BorderFactory.createTitledBorder("Marcações Existentes"));

        jlstMarcacoesExistentes.setModel(modeloMarcacoesExistentes);
        jscpMarcacoesExistentes.setViewportView(jlstMarcacoesExistentes);

        javax.swing.GroupLayout jpMarcacoesExistentesLayout = new javax.swing.GroupLayout(jpMarcacoesExistentes);
        jpMarcacoesExistentes.setLayout(jpMarcacoesExistentesLayout);
        jpMarcacoesExistentesLayout.setHorizontalGroup(
            jpMarcacoesExistentesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpMarcacoesExistentesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jscpMarcacoesExistentes, javax.swing.GroupLayout.DEFAULT_SIZE, 639, Short.MAX_VALUE)
                .addContainerGap())
        );
        jpMarcacoesExistentesLayout.setVerticalGroup(
            jpMarcacoesExistentesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpMarcacoesExistentesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jscpMarcacoesExistentes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jpMarcacoesLayout = new javax.swing.GroupLayout(jpMarcacoes);
        jpMarcacoes.setLayout(jpMarcacoesLayout);
        jpMarcacoesLayout.setHorizontalGroup(
            jpMarcacoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpMarcacoesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpMarcacoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jpMarcacoesExistentes, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jpMarcacoesLayout.createSequentialGroup()
                        .addComponent(jcCalendario, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jpDadosMarcacao, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jpMarcacoesLayout.setVerticalGroup(
            jpMarcacoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpMarcacoesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpMarcacoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jpDadosMarcacao, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jcCalendario, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 270, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jpMarcacoesExistentes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jbtnGravar.setText("Gravar");
        jbtnGravar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnGravarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jpMarcacoes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jbtnGravar, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jpMarcacoes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbtnGravar)
                .addContainerGap(36, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jbtnGravarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnGravarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jbtnGravarActionPerformed

    private void jcbxClientesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbxClientesActionPerformed
        modeloVeiculos.removeAllElements();
        for (Veiculo v : ((Cliente) modeloClientes.getSelectedItem()).getVeiculosActuais()) {
            modeloVeiculos.addElement(v);
        }
    }//GEN-LAST:event_jcbxClientesActionPerformed

    private void jcCalendarioPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jcCalendarioPropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_jcCalendarioPropertyChange
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox jbcxVeiculos;
    private javax.swing.JButton jbtnGravar;
    private com.toedter.calendar.JCalendar jcCalendario;
    private javax.swing.JComboBox jcbxClientes;
    private javax.swing.JLabel jlblCliente;
    private javax.swing.JLabel jlblHora;
    private javax.swing.JLabel jlblVeiculo;
    private javax.swing.JList jlstMarcacoesExistentes;
    private javax.swing.JPanel jpDadosMarcacao;
    private javax.swing.JPanel jpMarcacoes;
    private javax.swing.JPanel jpMarcacoesExistentes;
    private javax.swing.JScrollPane jscpMarcacoesExistentes;
    private javax.swing.JScrollPane jscpNotas;
    private javax.swing.JTextArea jtaNotas;
    private javax.swing.JTextField jtfHora;
    // End of variables declaration//GEN-END:variables
}
